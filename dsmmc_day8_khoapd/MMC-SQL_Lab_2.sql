-- CREATE DATABASE
DROP
    DATABASE IF EXISTS TESTINGSYSTEM;
CREATE
    DATABASE TESTINGSYSTEM;
USE
    TESTINGSYSTEM;

# TẠO MỚI BẢNG DANH MỤC CHỨA: DEPARTMENT,POSITION, TYPE_QUESTION, CATEGORY_QUESTION,
# GROUP, PHÂN BIỆT BẰNG TYPE
DROP TABLE IF EXISTS `CATEGORY`;
CREATE TABLE `CATEGORY`
(
    ID   INT PRIMARY KEY AUTO_INCREMENT,
    TYPE enum ('DEPARTMENT','POSITION', 'TYPE_QUESTION', 'CATEGORY_QUESTION', 'GROUPS') NOT NULL,
    NAME VARCHAR(50)                                                                    NOT NULL
);

-- CREATE TABLE: ACCOUNT
DROP TABLE IF EXISTS `ACCOUNT`;
CREATE TABLE `ACCOUNT`
(
    ID            INT PRIMARY KEY AUTO_INCREMENT,
    EMAIL         VARCHAR(50) UNIQUE,
    USERNAME      VARCHAR(50),
    FULLNAME      CHAR(50),
    DEPARTMENT_ID INT,
    POSITION_ID   INT,
    CREATE_AT     DATE
);

-- CREATE TABLE: GROUP
DROP TABLE IF EXISTS `GROUP`;
CREATE TABLE `GROUP`
(
    ID         INT PRIMARY KEY AUTO_INCREMENT,
    NAME       VARCHAR(50) NOT NULL UNIQUE,
    CREATOR_ID INT,
    CREATE_AT  DATE
);


-- CREATE TABLE: GROUPACCOUNT
DROP TABLE IF EXISTS `GROUP_ACCOUNT`;
CREATE TABLE GROUP_ACCOUNT
(
    GROUP_ID   INT,
    ACCOUNT_ID INT,
    JOIN_AT    DATE,
    primary key (group_id, account_id)
);

-- CREATE TABLE: QUESTION
DROP TABLE IF EXISTS `QUESTION`;
CREATE TABLE QUESTION
(
    ID          INT PRIMARY KEY AUTO_INCREMENT,
    CONTENT     VARCHAR(50),
    CATEGORY_ID INT,
    TYPE_ID     INT,
    CREATOR_ID  INT,
    CREATE_AT   DATE
);

-- CREATE TABLE: ANSWER
DROP TABLE IF EXISTS `ANSWER`;
CREATE TABLE ANSWER
(
    ID          INT PRIMARY KEY AUTO_INCREMENT,
    CONTENT     VARCHAR(50),
    QUESTION_ID INT,
    IS_CORRECT  BIT
);

-- CREATE TABLE: EXAM
DROP TABLE IF EXISTS `EXAM`;
CREATE TABLE EXAM
(
    ID          INT PRIMARY KEY AUTO_INCREMENT,
    CODES       VARCHAR(10),
    TITLE       VARCHAR(50),
    CATEGORY_ID INT,
    DURATION    INT,
    CREATOR_ID  INT,
    CREATE_AT   DATE
);

-- CREATE TABLE: EXAMQUESTION
DROP TABLE IF EXISTS `EXAM_QUESTION`;
CREATE TABLE EXAM_QUESTION
(
    EXAM_ID     INT,
    QUESTION_ID INT
);

ALTER TABLE `ACCOUNT`
    ADD FOREIGN KEY FK_ACCOUNT_CATEGORY_DEP (DEPARTMENT_ID) REFERENCES `CATEGORY` (ID);
ALTER TABLE `ACCOUNT`
    ADD FOREIGN KEY FK_ACCOUNT_CATEGORY_POS (POSITION_ID) REFERENCES `CATEGORY` (ID);
ALTER TABLE `GROUP_ACCOUNT`
    ADD FOREIGN KEY FK_GROUP_ACCOUNT_GRP (GROUP_ID) REFERENCES `GROUP` (ID);
ALTER TABLE `GROUP_ACCOUNT`
    ADD FOREIGN KEY FK_GROUP_ACCOUNT_ACCOUNT (ACCOUNT_ID) REFERENCES `ACCOUNT` (ID);
ALTER TABLE `QUESTION`
    ADD FOREIGN KEY FK_QUESTION_CATEGORY (CATEGORY_ID) REFERENCES `CATEGORY` (ID);
ALTER TABLE `QUESTION`
    ADD FOREIGN KEY FK_QUESTION_CATEGORY_TYPE (TYPE_ID) REFERENCES `CATEGORY` (ID);
ALTER TABLE `ANSWER`
    ADD FOREIGN KEY FK_ANSWER_QUESTION (QUESTION_ID) REFERENCES `QUESTION` (ID);
ALTER TABLE `EXAM`
    ADD FOREIGN KEY FK_EXAM_CATEGORY (CATEGORY_ID) REFERENCES `CATEGORY` (ID);
ALTER TABLE `EXAM_QUESTION`
    ADD FOREIGN KEY FK_EXAM_QUESTION_EXAM (EXAM_ID) REFERENCES `EXAM` (ID);
ALTER TABLE `EXAM_QUESTION`
    ADD FOREIGN KEY FK_EXAM_QUESTION_QUESTION (QUESTION_ID) REFERENCES `QUESTION` (ID);



